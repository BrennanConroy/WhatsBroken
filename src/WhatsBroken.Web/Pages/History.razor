@page "/history/{Project}/{Type}/{Method}"
@page "/history/{Project}/{Type}/{Method}/{ArgumentHash}"
@inject KustoContextFactory KustoContextFactory

@{
    var title = $"Test History for {Project}/{Type}.{Method}({_arguments})";
}

<QueryView TResult="TestResult" OnLoadData="OnLoadDataAsync" HeaderTitle="@title">
    <HeaderContent>
        Test History for @(Method)(@_arguments) <small class="text-muted">@Project</small>
    </HeaderContent>
    <ChildContent Context="results">
        <TestResultGrid Results="results" />
    </ChildContent>
</QueryView>

@code {
    [Parameter]
    public string? Project { get; set; }

    [Parameter]
    public string? Type { get; set; }

    [Parameter]
    public string? Method { get; set; }

    [Parameter]
    public string? ArgumentHash { get; set; }

    string _arguments = string.Empty;

    async Task OnLoadDataAsync(QueryView<TestResult>.LoadDataEventArgs args)
    {
        args.Results = await args.Context.GetRunHistoryAsync(Project, Type, Method, ArgumentHash, limit: 100);

        // Resolve the arguments, if any
        _arguments = args.Results.FirstOrDefault()?.Arguments ?? string.Empty;
    }
}
